import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F

__weights_dict = dict()

def load_weights(weight_file):
    if weight_file == None:
        return

    try:
        weights_dict = np.load(weight_file).item()
    except:
        weights_dict = np.load(weight_file, encoding='bytes').item()

    return weights_dict

class KitModel(nn.Module):

    
    def __init__(self, weight_file):
        super(KitModel, self).__init__()
        global __weights_dict
        __weights_dict = load_weights(weight_file)

        self.Conv1 = self.__conv(2, name='Conv1', in_channels=3, out_channels=16, kernel_size=(3, 3), stride=(2, 2), groups=1, bias=False)
        self.bn_Conv1 = self.__batch_normalization(2, 'bn_Conv1', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.expanded_conv_depthwise = self.__conv(2, name='expanded_conv_depthwise', in_channels=16, out_channels=16, kernel_size=(3, 3), stride=(1, 1), groups=16, bias=False)
        self.expanded_conv_depthwise_BN = self.__batch_normalization(2, 'expanded_conv_depthwise_BN', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.expanded_conv_project = self.__conv(2, name='expanded_conv_project', in_channels=16, out_channels=8, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.expanded_conv_project_BN = self.__batch_normalization(2, 'expanded_conv_project_BN', num_features=8, eps=0.0010000000474974513, momentum=0.0)
        self.block_1_expand = self.__conv(2, name='block_1_expand', in_channels=8, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_1_expand_BN = self.__batch_normalization(2, 'block_1_expand_BN', num_features=48, eps=0.0010000000474974513, momentum=0.0)
        self.block_1_depthwise = self.__conv(2, name='block_1_depthwise', in_channels=48, out_channels=48, kernel_size=(3, 3), stride=(2, 2), groups=48, bias=False)
        self.block_1_depthwise_BN = self.__batch_normalization(2, 'block_1_depthwise_BN', num_features=48, eps=0.0010000000474974513, momentum=0.0)
        self.block_1_project = self.__conv(2, name='block_1_project', in_channels=48, out_channels=16, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_1_project_BN = self.__batch_normalization(2, 'block_1_project_BN', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.block_2_expand = self.__conv(2, name='block_2_expand', in_channels=16, out_channels=96, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_2_expand_BN = self.__batch_normalization(2, 'block_2_expand_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_2_depthwise = self.__conv(2, name='block_2_depthwise', in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=96, bias=False)
        self.block_2_depthwise_BN = self.__batch_normalization(2, 'block_2_depthwise_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_2_project = self.__conv(2, name='block_2_project', in_channels=96, out_channels=16, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_2_project_BN = self.__batch_normalization(2, 'block_2_project_BN', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.block_3_expand = self.__conv(2, name='block_3_expand', in_channels=16, out_channels=96, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_3_expand_BN = self.__batch_normalization(2, 'block_3_expand_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_3_depthwise = self.__conv(2, name='block_3_depthwise', in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(2, 2), groups=96, bias=False)
        self.block_3_depthwise_BN = self.__batch_normalization(2, 'block_3_depthwise_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_3_project = self.__conv(2, name='block_3_project', in_channels=96, out_channels=16, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_3_project_BN = self.__batch_normalization(2, 'block_3_project_BN', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.block_4_expand = self.__conv(2, name='block_4_expand', in_channels=16, out_channels=96, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_4_expand_BN = self.__batch_normalization(2, 'block_4_expand_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_4_depthwise = self.__conv(2, name='block_4_depthwise', in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=96, bias=False)
        self.block_4_depthwise_BN = self.__batch_normalization(2, 'block_4_depthwise_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_4_project = self.__conv(2, name='block_4_project', in_channels=96, out_channels=16, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_4_project_BN = self.__batch_normalization(2, 'block_4_project_BN', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.block_5_expand = self.__conv(2, name='block_5_expand', in_channels=16, out_channels=96, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_5_expand_BN = self.__batch_normalization(2, 'block_5_expand_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_5_depthwise = self.__conv(2, name='block_5_depthwise', in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=96, bias=False)
        self.block_5_depthwise_BN = self.__batch_normalization(2, 'block_5_depthwise_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_5_project = self.__conv(2, name='block_5_project', in_channels=96, out_channels=16, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_5_project_BN = self.__batch_normalization(2, 'block_5_project_BN', num_features=16, eps=0.0010000000474974513, momentum=0.0)
        self.block_6_expand = self.__conv(2, name='block_6_expand', in_channels=16, out_channels=96, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_6_expand_BN = self.__batch_normalization(2, 'block_6_expand_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_6_depthwise = self.__conv(2, name='block_6_depthwise', in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(2, 2), groups=96, bias=False)
        self.block_6_depthwise_BN = self.__batch_normalization(2, 'block_6_depthwise_BN', num_features=96, eps=0.0010000000474974513, momentum=0.0)
        self.block_6_project = self.__conv(2, name='block_6_project', in_channels=96, out_channels=32, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_6_project_BN = self.__batch_normalization(2, 'block_6_project_BN', num_features=32, eps=0.0010000000474974513, momentum=0.0)
        self.block_7_expand = self.__conv(2, name='block_7_expand', in_channels=32, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_7_expand_BN = self.__batch_normalization(2, 'block_7_expand_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_7_depthwise = self.__conv(2, name='block_7_depthwise', in_channels=192, out_channels=192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False)
        self.block_7_depthwise_BN = self.__batch_normalization(2, 'block_7_depthwise_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_7_project = self.__conv(2, name='block_7_project', in_channels=192, out_channels=32, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_7_project_BN = self.__batch_normalization(2, 'block_7_project_BN', num_features=32, eps=0.0010000000474974513, momentum=0.0)
        self.block_8_expand = self.__conv(2, name='block_8_expand', in_channels=32, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_8_expand_BN = self.__batch_normalization(2, 'block_8_expand_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_8_depthwise = self.__conv(2, name='block_8_depthwise', in_channels=192, out_channels=192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False)
        self.block_8_depthwise_BN = self.__batch_normalization(2, 'block_8_depthwise_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_8_project = self.__conv(2, name='block_8_project', in_channels=192, out_channels=32, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_8_project_BN = self.__batch_normalization(2, 'block_8_project_BN', num_features=32, eps=0.0010000000474974513, momentum=0.0)
        self.block_9_expand = self.__conv(2, name='block_9_expand', in_channels=32, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_9_expand_BN = self.__batch_normalization(2, 'block_9_expand_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_9_depthwise = self.__conv(2, name='block_9_depthwise', in_channels=192, out_channels=192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False)
        self.block_9_depthwise_BN = self.__batch_normalization(2, 'block_9_depthwise_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_9_project = self.__conv(2, name='block_9_project', in_channels=192, out_channels=32, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_9_project_BN = self.__batch_normalization(2, 'block_9_project_BN', num_features=32, eps=0.0010000000474974513, momentum=0.0)
        self.block_10_expand = self.__conv(2, name='block_10_expand', in_channels=32, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_10_expand_BN = self.__batch_normalization(2, 'block_10_expand_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_10_depthwise = self.__conv(2, name='block_10_depthwise', in_channels=192, out_channels=192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False)
        self.block_10_depthwise_BN = self.__batch_normalization(2, 'block_10_depthwise_BN', num_features=192, eps=0.0010000000474974513, momentum=0.0)
        self.block_10_project = self.__conv(2, name='block_10_project', in_channels=192, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_10_project_BN = self.__batch_normalization(2, 'block_10_project_BN', num_features=48, eps=0.0010000000474974513, momentum=0.0)
        self.block_11_expand = self.__conv(2, name='block_11_expand', in_channels=48, out_channels=288, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_11_expand_BN = self.__batch_normalization(2, 'block_11_expand_BN', num_features=288, eps=0.0010000000474974513, momentum=0.0)
        self.block_11_depthwise = self.__conv(2, name='block_11_depthwise', in_channels=288, out_channels=288, kernel_size=(3, 3), stride=(1, 1), groups=288, bias=False)
        self.block_11_depthwise_BN = self.__batch_normalization(2, 'block_11_depthwise_BN', num_features=288, eps=0.0010000000474974513, momentum=0.0)
        self.block_11_project = self.__conv(2, name='block_11_project', in_channels=288, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_11_project_BN = self.__batch_normalization(2, 'block_11_project_BN', num_features=48, eps=0.0010000000474974513, momentum=0.0)
        self.block_12_expand = self.__conv(2, name='block_12_expand', in_channels=48, out_channels=288, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_12_expand_BN = self.__batch_normalization(2, 'block_12_expand_BN', num_features=288, eps=0.0010000000474974513, momentum=0.0)
        self.block_12_depthwise = self.__conv(2, name='block_12_depthwise', in_channels=288, out_channels=288, kernel_size=(3, 3), stride=(1, 1), groups=288, bias=False)
        self.block_12_depthwise_BN = self.__batch_normalization(2, 'block_12_depthwise_BN', num_features=288, eps=0.0010000000474974513, momentum=0.0)
        self.block_12_project = self.__conv(2, name='block_12_project', in_channels=288, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_12_project_BN = self.__batch_normalization(2, 'block_12_project_BN', num_features=48, eps=0.0010000000474974513, momentum=0.0)
        self.block_13_expand = self.__conv(2, name='block_13_expand', in_channels=48, out_channels=288, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_13_expand_BN = self.__batch_normalization(2, 'block_13_expand_BN', num_features=288, eps=0.0010000000474974513, momentum=0.0)
        self.block_13_depthwise = self.__conv(2, name='block_13_depthwise', in_channels=288, out_channels=288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)
        self.block_13_depthwise_BN = self.__batch_normalization(2, 'block_13_depthwise_BN', num_features=288, eps=0.0010000000474974513, momentum=0.0)
        self.block_13_project = self.__conv(2, name='block_13_project', in_channels=288, out_channels=80, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_13_project_BN = self.__batch_normalization(2, 'block_13_project_BN', num_features=80, eps=0.0010000000474974513, momentum=0.0)
        self.block_14_expand = self.__conv(2, name='block_14_expand', in_channels=80, out_channels=480, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_14_expand_BN = self.__batch_normalization(2, 'block_14_expand_BN', num_features=480, eps=0.0010000000474974513, momentum=0.0)
        self.block_14_depthwise = self.__conv(2, name='block_14_depthwise', in_channels=480, out_channels=480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False)
        self.block_14_depthwise_BN = self.__batch_normalization(2, 'block_14_depthwise_BN', num_features=480, eps=0.0010000000474974513, momentum=0.0)
        self.block_14_project = self.__conv(2, name='block_14_project', in_channels=480, out_channels=80, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_14_project_BN = self.__batch_normalization(2, 'block_14_project_BN', num_features=80, eps=0.0010000000474974513, momentum=0.0)
        self.block_15_expand = self.__conv(2, name='block_15_expand', in_channels=80, out_channels=480, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_15_expand_BN = self.__batch_normalization(2, 'block_15_expand_BN', num_features=480, eps=0.0010000000474974513, momentum=0.0)
        self.block_15_depthwise = self.__conv(2, name='block_15_depthwise', in_channels=480, out_channels=480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False)
        self.block_15_depthwise_BN = self.__batch_normalization(2, 'block_15_depthwise_BN', num_features=480, eps=0.0010000000474974513, momentum=0.0)
        self.block_15_project = self.__conv(2, name='block_15_project', in_channels=480, out_channels=80, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_15_project_BN = self.__batch_normalization(2, 'block_15_project_BN', num_features=80, eps=0.0010000000474974513, momentum=0.0)
        self.block_16_expand = self.__conv(2, name='block_16_expand', in_channels=80, out_channels=480, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_16_expand_BN = self.__batch_normalization(2, 'block_16_expand_BN', num_features=480, eps=0.0010000000474974513, momentum=0.0)
        self.block_16_depthwise = self.__conv(2, name='block_16_depthwise', in_channels=480, out_channels=480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False)
        self.block_16_depthwise_BN = self.__batch_normalization(2, 'block_16_depthwise_BN', num_features=480, eps=0.0010000000474974513, momentum=0.0)
        self.block_16_project = self.__conv(2, name='block_16_project', in_channels=480, out_channels=160, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.block_16_project_BN = self.__batch_normalization(2, 'block_16_project_BN', num_features=160, eps=0.0010000000474974513, momentum=0.0)
        self.Conv_1 = self.__conv(2, name='Conv_1', in_channels=160, out_channels=1280, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
        self.Conv_1_bn = self.__batch_normalization(2, 'Conv_1_bn', num_features=1280, eps=0.0010000000474974513, momentum=0.0)

    def forward(self, x):
        Conv1_pad       = F.pad(x, (0, 1, 0, 1), mode = 'constant', value = 0)
        Conv1           = self.Conv1(Conv1_pad)
        bn_Conv1        = self.bn_Conv1(Conv1)
        Conv1_relu      = F.relu6(bn_Conv1)
        expanded_conv_depthwise_pad = F.pad(Conv1_relu, (1, 1, 1, 1))
        expanded_conv_depthwise = self.expanded_conv_depthwise(expanded_conv_depthwise_pad)
        expanded_conv_depthwise_BN = self.expanded_conv_depthwise_BN(expanded_conv_depthwise)
        expanded_conv_depthwise_relu = F.relu6(expanded_conv_depthwise_BN)
        expanded_conv_project = self.expanded_conv_project(expanded_conv_depthwise_relu)
        expanded_conv_project_BN = self.expanded_conv_project_BN(expanded_conv_project)
        block_1_expand  = self.block_1_expand(expanded_conv_project_BN)
        block_1_expand_BN = self.block_1_expand_BN(block_1_expand)
        block_1_expand_relu = F.relu6(block_1_expand_BN)
        block_1_pad     = F.pad(block_1_expand_relu, (0, 1, 0, 1), mode = 'constant', value = 0)
        block_1_depthwise = self.block_1_depthwise(block_1_pad)
        block_1_depthwise_BN = self.block_1_depthwise_BN(block_1_depthwise)
        block_1_depthwise_relu = F.relu6(block_1_depthwise_BN)
        block_1_project = self.block_1_project(block_1_depthwise_relu)
        block_1_project_BN = self.block_1_project_BN(block_1_project)
        block_2_expand  = self.block_2_expand(block_1_project_BN)
        block_2_expand_BN = self.block_2_expand_BN(block_2_expand)
        block_2_expand_relu = F.relu6(block_2_expand_BN)
        block_2_depthwise_pad = F.pad(block_2_expand_relu, (1, 1, 1, 1))
        block_2_depthwise = self.block_2_depthwise(block_2_depthwise_pad)
        block_2_depthwise_BN = self.block_2_depthwise_BN(block_2_depthwise)
        block_2_depthwise_relu = F.relu6(block_2_depthwise_BN)
        block_2_project = self.block_2_project(block_2_depthwise_relu)
        block_2_project_BN = self.block_2_project_BN(block_2_project)
        block_2_add     = block_1_project_BN + block_2_project_BN
        block_3_expand  = self.block_3_expand(block_2_add)
        block_3_expand_BN = self.block_3_expand_BN(block_3_expand)
        block_3_expand_relu = F.relu6(block_3_expand_BN)
        block_3_pad     = F.pad(block_3_expand_relu, (0, 1, 0, 1), mode = 'constant', value = 0)
        block_3_depthwise = self.block_3_depthwise(block_3_pad)
        block_3_depthwise_BN = self.block_3_depthwise_BN(block_3_depthwise)
        block_3_depthwise_relu = F.relu6(block_3_depthwise_BN)
        block_3_project = self.block_3_project(block_3_depthwise_relu)
        block_3_project_BN = self.block_3_project_BN(block_3_project)
        block_4_expand  = self.block_4_expand(block_3_project_BN)
        block_4_expand_BN = self.block_4_expand_BN(block_4_expand)
        block_4_expand_relu = F.relu6(block_4_expand_BN)
        block_4_depthwise_pad = F.pad(block_4_expand_relu, (1, 1, 1, 1))
        block_4_depthwise = self.block_4_depthwise(block_4_depthwise_pad)
        block_4_depthwise_BN = self.block_4_depthwise_BN(block_4_depthwise)
        block_4_depthwise_relu = F.relu6(block_4_depthwise_BN)
        block_4_project = self.block_4_project(block_4_depthwise_relu)
        block_4_project_BN = self.block_4_project_BN(block_4_project)
        block_4_add     = block_3_project_BN + block_4_project_BN
        block_5_expand  = self.block_5_expand(block_4_add)
        block_5_expand_BN = self.block_5_expand_BN(block_5_expand)
        block_5_expand_relu = F.relu6(block_5_expand_BN)
        block_5_depthwise_pad = F.pad(block_5_expand_relu, (1, 1, 1, 1))
        block_5_depthwise = self.block_5_depthwise(block_5_depthwise_pad)
        block_5_depthwise_BN = self.block_5_depthwise_BN(block_5_depthwise)
        block_5_depthwise_relu = F.relu6(block_5_depthwise_BN)
        block_5_project = self.block_5_project(block_5_depthwise_relu)
        block_5_project_BN = self.block_5_project_BN(block_5_project)
        block_5_add     = block_4_add + block_5_project_BN
        block_6_expand  = self.block_6_expand(block_5_add)
        block_6_expand_BN = self.block_6_expand_BN(block_6_expand)
        block_6_expand_relu = F.relu6(block_6_expand_BN)
        block_6_pad     = F.pad(block_6_expand_relu, (0, 1, 0, 1), mode = 'constant', value = 0)
        block_6_depthwise = self.block_6_depthwise(block_6_pad)
        block_6_depthwise_BN = self.block_6_depthwise_BN(block_6_depthwise)
        block_6_depthwise_relu = F.relu6(block_6_depthwise_BN)
        block_6_project = self.block_6_project(block_6_depthwise_relu)
        block_6_project_BN = self.block_6_project_BN(block_6_project)
        block_7_expand  = self.block_7_expand(block_6_project_BN)
        block_7_expand_BN = self.block_7_expand_BN(block_7_expand)
        block_7_expand_relu = F.relu6(block_7_expand_BN)
        block_7_depthwise_pad = F.pad(block_7_expand_relu, (1, 1, 1, 1))
        block_7_depthwise = self.block_7_depthwise(block_7_depthwise_pad)
        block_7_depthwise_BN = self.block_7_depthwise_BN(block_7_depthwise)
        block_7_depthwise_relu = F.relu6(block_7_depthwise_BN)
        block_7_project = self.block_7_project(block_7_depthwise_relu)
        block_7_project_BN = self.block_7_project_BN(block_7_project)
        block_7_add     = block_6_project_BN + block_7_project_BN
        block_8_expand  = self.block_8_expand(block_7_add)
        block_8_expand_BN = self.block_8_expand_BN(block_8_expand)
        block_8_expand_relu = F.relu6(block_8_expand_BN)
        block_8_depthwise_pad = F.pad(block_8_expand_relu, (1, 1, 1, 1))
        block_8_depthwise = self.block_8_depthwise(block_8_depthwise_pad)
        block_8_depthwise_BN = self.block_8_depthwise_BN(block_8_depthwise)
        block_8_depthwise_relu = F.relu6(block_8_depthwise_BN)
        block_8_project = self.block_8_project(block_8_depthwise_relu)
        block_8_project_BN = self.block_8_project_BN(block_8_project)
        block_8_add     = block_7_add + block_8_project_BN
        block_9_expand  = self.block_9_expand(block_8_add)
        block_9_expand_BN = self.block_9_expand_BN(block_9_expand)
        block_9_expand_relu = F.relu6(block_9_expand_BN)
        block_9_depthwise_pad = F.pad(block_9_expand_relu, (1, 1, 1, 1))
        block_9_depthwise = self.block_9_depthwise(block_9_depthwise_pad)
        block_9_depthwise_BN = self.block_9_depthwise_BN(block_9_depthwise)
        block_9_depthwise_relu = F.relu6(block_9_depthwise_BN)
        block_9_project = self.block_9_project(block_9_depthwise_relu)
        block_9_project_BN = self.block_9_project_BN(block_9_project)
        block_9_add     = block_8_add + block_9_project_BN
        block_10_expand = self.block_10_expand(block_9_add)
        block_10_expand_BN = self.block_10_expand_BN(block_10_expand)
        block_10_expand_relu = F.relu6(block_10_expand_BN)
        block_10_depthwise_pad = F.pad(block_10_expand_relu, (1, 1, 1, 1))
        block_10_depthwise = self.block_10_depthwise(block_10_depthwise_pad)
        block_10_depthwise_BN = self.block_10_depthwise_BN(block_10_depthwise)
        block_10_depthwise_relu = F.relu6(block_10_depthwise_BN)
        block_10_project = self.block_10_project(block_10_depthwise_relu)
        block_10_project_BN = self.block_10_project_BN(block_10_project)
        block_11_expand = self.block_11_expand(block_10_project_BN)
        block_11_expand_BN = self.block_11_expand_BN(block_11_expand)
        block_11_expand_relu = F.relu6(block_11_expand_BN)
        block_11_depthwise_pad = F.pad(block_11_expand_relu, (1, 1, 1, 1))
        block_11_depthwise = self.block_11_depthwise(block_11_depthwise_pad)
        block_11_depthwise_BN = self.block_11_depthwise_BN(block_11_depthwise)
        block_11_depthwise_relu = F.relu6(block_11_depthwise_BN)
        block_11_project = self.block_11_project(block_11_depthwise_relu)
        block_11_project_BN = self.block_11_project_BN(block_11_project)
        block_11_add    = block_10_project_BN + block_11_project_BN
        block_12_expand = self.block_12_expand(block_11_add)
        block_12_expand_BN = self.block_12_expand_BN(block_12_expand)
        block_12_expand_relu = F.relu6(block_12_expand_BN)
        block_12_depthwise_pad = F.pad(block_12_expand_relu, (1, 1, 1, 1))
        block_12_depthwise = self.block_12_depthwise(block_12_depthwise_pad)
        block_12_depthwise_BN = self.block_12_depthwise_BN(block_12_depthwise)
        block_12_depthwise_relu = F.relu6(block_12_depthwise_BN)
        block_12_project = self.block_12_project(block_12_depthwise_relu)
        block_12_project_BN = self.block_12_project_BN(block_12_project)
        block_12_add    = block_11_add + block_12_project_BN
        block_13_expand = self.block_13_expand(block_12_add)
        block_13_expand_BN = self.block_13_expand_BN(block_13_expand)
        block_13_expand_relu = F.relu6(block_13_expand_BN)
        block_13_pad    = F.pad(block_13_expand_relu, (0, 1, 0, 1), mode = 'constant', value = 0)
        block_13_depthwise = self.block_13_depthwise(block_13_pad)
        block_13_depthwise_BN = self.block_13_depthwise_BN(block_13_depthwise)
        block_13_depthwise_relu = F.relu6(block_13_depthwise_BN)
        block_13_project = self.block_13_project(block_13_depthwise_relu)
        block_13_project_BN = self.block_13_project_BN(block_13_project)
        block_14_expand = self.block_14_expand(block_13_project_BN)
        block_14_expand_BN = self.block_14_expand_BN(block_14_expand)
        block_14_expand_relu = F.relu6(block_14_expand_BN)
        block_14_depthwise_pad = F.pad(block_14_expand_relu, (1, 1, 1, 1))
        block_14_depthwise = self.block_14_depthwise(block_14_depthwise_pad)
        block_14_depthwise_BN = self.block_14_depthwise_BN(block_14_depthwise)
        block_14_depthwise_relu = F.relu6(block_14_depthwise_BN)
        block_14_project = self.block_14_project(block_14_depthwise_relu)
        block_14_project_BN = self.block_14_project_BN(block_14_project)
        block_14_add    = block_13_project_BN + block_14_project_BN
        block_15_expand = self.block_15_expand(block_14_add)
        block_15_expand_BN = self.block_15_expand_BN(block_15_expand)
        block_15_expand_relu = F.relu6(block_15_expand_BN)
        block_15_depthwise_pad = F.pad(block_15_expand_relu, (1, 1, 1, 1))
        block_15_depthwise = self.block_15_depthwise(block_15_depthwise_pad)
        block_15_depthwise_BN = self.block_15_depthwise_BN(block_15_depthwise)
        block_15_depthwise_relu = F.relu6(block_15_depthwise_BN)
        block_15_project = self.block_15_project(block_15_depthwise_relu)
        block_15_project_BN = self.block_15_project_BN(block_15_project)
        block_15_add    = block_14_add + block_15_project_BN
        block_16_expand = self.block_16_expand(block_15_add)
        block_16_expand_BN = self.block_16_expand_BN(block_16_expand)
        block_16_expand_relu = F.relu6(block_16_expand_BN)
        block_16_depthwise_pad = F.pad(block_16_expand_relu, (1, 1, 1, 1))
        block_16_depthwise = self.block_16_depthwise(block_16_depthwise_pad)
        block_16_depthwise_BN = self.block_16_depthwise_BN(block_16_depthwise)
        block_16_depthwise_relu = F.relu6(block_16_depthwise_BN)
        block_16_project = self.block_16_project(block_16_depthwise_relu)
        block_16_project_BN = self.block_16_project_BN(block_16_project)
        Conv_1          = self.Conv_1(block_16_project_BN)
        Conv_1_bn       = self.Conv_1_bn(Conv_1)
        out_relu        = F.relu6(Conv_1_bn)
        global_average_pooling2d_1 = F.avg_pool2d(input = out_relu, kernel_size = out_relu.size()[2:])
        global_average_pooling2d_1_flatten = global_average_pooling2d_1.view(global_average_pooling2d_1.size(0), -1)
        return global_average_pooling2d_1_flatten


    @staticmethod
    def __batch_normalization(dim, name, **kwargs):
        if   dim == 1:  layer = nn.BatchNorm1d(**kwargs)
        elif dim == 2:  layer = nn.BatchNorm2d(**kwargs)
        elif dim == 3:  layer = nn.BatchNorm3d(**kwargs)
        else:           raise NotImplementedError()

        if 'scale' in __weights_dict[name]:
            layer.state_dict()['weight'].copy_(torch.from_numpy(__weights_dict[name]['scale']))
        else:
            layer.weight.data.fill_(1)

        if 'bias' in __weights_dict[name]:
            layer.state_dict()['bias'].copy_(torch.from_numpy(__weights_dict[name]['bias']))
        else:
            layer.bias.data.fill_(0)

        layer.state_dict()['running_mean'].copy_(torch.from_numpy(__weights_dict[name]['mean']))
        layer.state_dict()['running_var'].copy_(torch.from_numpy(__weights_dict[name]['var']))
        return layer

    @staticmethod
    def __conv(dim, name, **kwargs):
        if   dim == 1:  layer = nn.Conv1d(**kwargs)
        elif dim == 2:  layer = nn.Conv2d(**kwargs)
        elif dim == 3:  layer = nn.Conv3d(**kwargs)
        else:           raise NotImplementedError()

        layer.state_dict()['weight'].copy_(torch.from_numpy(__weights_dict[name]['weights']))
        if 'bias' in __weights_dict[name]:
            layer.state_dict()['bias'].copy_(torch.from_numpy(__weights_dict[name]['bias']))
        return layer
